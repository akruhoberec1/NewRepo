@model PaginatedList<MVC.Models.VehicleMakeVM>

<h1>Vehicle Makes Admin View</h1>
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<br />




<a asp-controller="VehicleMake" asp-action="Create" class="btn btn-primary">Create</a>
<br />
<br />
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by any:<br />
            <input type="text" name="SearchString" value="@ViewBag.CurrentFilter" />

            <input type="submit" value="Search" class="btn btn-default" /> | <a asp-action="Index">Back to Full List</a>
            <label for="PageSize">Results per page:</label>
            <select name="PageSize" class="form-control" onchange="this.form.submit()">
                <option value="5" selected="@(ViewBag.PageSize == 5 ? "selected" : "")">5</option>
                <option value="10" selected="@(ViewBag.PageSize == 10 ? "selected" : "")">10</option>
                <option value="20" selected="@(ViewBag.PageSize == 20 ? "selected" : "")">20</option>
            </select>
        </p>
    </div>
</form>

<br />

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.IdSortParm">@Html.DisplayNameFor(model => model.FirstOrDefault().Id)</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.NameSortParm">@Html.DisplayNameFor(model => model.FirstOrDefault().Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.AbrvSortParm">@Html.DisplayNameFor(model => model.FirstOrDefault().Abrv)</a>
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
                        @foreach (var make in Model)
                        {
            <tr>
                <td>@make.Id</td>
                <td>@make.Name</td>
                <td>@make.Abrv</td>
                <td>


                    <a asp-controller="VehicleMake" asp-action="Edit" asp-route-id="@make.Id">Edit</a>


                    <form asp-controller="VehicleMake" asp-action="Delete" asp-route-id="@make.Id" method="post" onsubmit="return confirm('You sure?')">
                        <button type="submit">Delete</button>
                    </form>
                                    @*<a asp-controller="VehicleMake" asp-action="Delete" asp-route-id="@make.Id" >Delete</a> ***** ne radi bez submita *@

                </td>
            </tr>
                        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPrevious ? "disabled" : "";
    var nextDisabled = !Model.HasNext ? "disabled" : "";
}

@*<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)" class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)" class="btn btn-default @nextDisabled">
    Next
</a>
*@

<nav>
    <ul class="pagination">
        @if (Model.HasPrevious)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { sortOrder = ViewBag.SortOrder, searchString = ViewBag.CurrentFilter, pageNumber = Model.PageIndex - 1, pageSize = Model.PageSize > 0 ? Model.PageSize : (int?)null }) ">Previous</a>
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { sortOrder = ViewBag.SortOrder, searchString = ViewBag.CurrentFilter, pageNumber = i, pageSize = Model.PageSize > 0 ? Model.PageSize : (int?)null })">@i</a>
            </li>
        }
        @if (Model.HasNext)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { sortOrder = ViewBag.SortOrder, searchString = ViewBag.CurrentFilter, pageNumber = Model.PageIndex + 1, pageSize = Model.PageSize > 0 ? Model.PageSize : (int?)null }) ">Next</a>
            </li>
        }
    </ul>
</nav>