@model PaginatedList<MVC.Models.VehicleMakeVM>

<h1>Vehicle Makes Admin View</h1>
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<br />




<a asp-controller="VehicleMake" asp-action="Create" class="btn btn-primary">Create</a>
<br />
<br />
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by any:<br />
            <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> | <a asp-action="Index">Back to Full List</a>

        </p>
    </div>
</form>

<br />

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Id)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AbrvSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Abrv)</a>
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var make in Model)
        {
            <tr>
                <td>@make.Id</td>
                <td>@make.Name</td>
                <td>@make.Abrv</td>
                <td>


                    <a asp-controller="VehicleMake" asp-action="Edit" asp-route-id="@make.Id">Edit</a>


                    <form asp-controller="VehicleMake" asp-action="Delete" asp-route-id="@make.Id" method="post" onsubmit="return confirm('You sure?')">
                        <button type="submit">Delete</button>
                    </form>
                    @*<a asp-controller="VehicleMake" asp-action="Delete" asp-route-id="@make.Id" >Delete</a> ***** ne radi bez submita *@

                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPrevious ? "disabled" : "";
    var nextDisabled = !Model.HasNext ? "disabled" : "";
}

<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)" class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)" class="btn btn-default @nextDisabled">
    Next
</a>

